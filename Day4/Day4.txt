On Day 4 of my 100 Days of Python learning, I learned about Randomization, Modules and Python lists.
I also completed a coding exercise called "Head or Tail Generator" and worked on a 
small project, "Rock Paper Scissors."

The Random module in Python
Read the docs here: https://docs.python.org/3/library/random.html

To use it you need to first import it:

import random

Random Whole Numbers Within a Range
import random
rand_num = random.randint(1, 10)

#This will produce a random whole number between 1 and 10 (inclusive).

Modules in Python
Python allows us to put code into different files and import that code if needed. This means 
that we can better organise and modularise our code.

You can create a new module simply by creating a new .py file and then you can import 
variables or functions from that file just by using the "import" keyword.


Random Floats
You can generate a random number between 0 (not inclusive) and 1 (inclusive) using the 
following code from the random module:

import random
rand_num_0_to_1 = random.random()

Another way to generate random floating point numbers is to use the uniform() function.

import random
random_float = random.uniform(1, 10)
#This will generate a random floating point number between 1 and 10. 

Lists
-----
You can create a simple collection of ordered items using a Python list. e.g.

fruits = ["Cherry", "Apple", "Pear"]

or

states_of_america = ["Delaware", "Pennsylvania", "New Jersey", "Georgia", "Connecticut", "Massachusetts", "Maryland", "South Carolina", "New Hampshire", "Virginia", "New York", "North Carolina", "Rhode Island", "Vermont", "Kentucky", "Tennessee", "Ohio", "Louisiana", "Indiana", "Mississippi", "Illinois", "Alabama", "Maine", "Missouri", "Arkansas", "Michigan", "Florida", "Texas", "Iowa", "Wisconsin", "California", "Minnesota", "Oregon", "Kansas", "West Virginia", "Nevada", "Nebraska", "Colorado", "North Dakota", "South Dakota", "Montana", "Washington", "Idaho", "Wyoming", "Utah", "Oklahoma", "New Mexico", "Arizona", "Alaska", "Hawaii"]

Accessing Items in Lists
You can provide the name of the list then a square bracket and then the item index that you want. e.g.

states_of_america[0]

will give you "Delaware".

Remember that everything computer related, the first number we count with is 0 and never 1. 0, 1, 2, 3 instead of 1, 2, 3 4.

Negative Indices
You can access items in the list counting from the end of the list by using negative whole numbers. e.g.

fruits = ["Cherry", "Apple", "Pear"]
fruits[-1] #this will be "Pear"
Modifying Items
You can use the same syntax to get hold of items in a List to modify it. e.g.

fruits = ["Cherry", "Apple", "Pear"]
fruits[0] = "Orange"
# fruits will now become ["Orange", "Apple", "Pear"]
Adding Items
You can add items to the end of a List using the append() function. e.g.

fruits = ["Cherry", "Apple", "Pear"]
fruits.append("Orange")
# fruits will now become ["Cherry", "Apple", "Pear", "Orange"]
Lists Documentation
You can find the documentation for Python Lists and other List related functions here: https://docs.python.org/3/tutorial/datastructures.html

Nested Lists
------------
A list inside list
fruits=["Grape","Apple","Plum"]
veggies=["carrot","beetroot","tomato"]

combo_dozen=[fruits,veggies]
print(combo_dozen)  
#output 
[['Grape','Apple','Plum'],['carrot',beetroot','tomato']]


IndexError
----------
When you try to access an item that is not in the range of the List, you will get an 
IndexError. e.g.

fruits = ["Cherry", "Apple", "Pear"]
print(fruits[3]) #This will be an IndexError


